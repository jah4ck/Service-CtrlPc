//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ServiceCtrlPc.ReferenceWSCtrlPc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSCtrlPcSoap", Namespace="http://tempuri.org/")]
    public partial class WSCtrlPc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback TraceLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlanningOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArretOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlageHoraireOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDownloadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDownloadFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExecProgramOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetExecProgramOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSCtrlPc() {
            this.Url = global::ServiceCtrlPc.Properties.Settings.Default.ServiceCtrlPc_ReferenceWSCtrlPc_WSCtrlPc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event CreateGuidCompletedEventHandler CreateGuidCompleted;
        
        /// <remarks/>
        public event TraceLogCompletedEventHandler TraceLogCompleted;
        
        /// <remarks/>
        public event GetPlanningCompletedEventHandler GetPlanningCompleted;
        
        /// <remarks/>
        public event GetArretCompletedEventHandler GetArretCompleted;
        
        /// <remarks/>
        public event GetPlageHoraireCompletedEventHandler GetPlageHoraireCompleted;
        
        /// <remarks/>
        public event GetDownloadFileCompletedEventHandler GetDownloadFileCompleted;
        
        /// <remarks/>
        public event SetDownloadFileCompletedEventHandler SetDownloadFileCompleted;
        
        /// <remarks/>
        public event GetExecProgramCompletedEventHandler GetExecProgramCompleted;
        
        /// <remarks/>
        public event SetExecProgramCompletedEventHandler SetExecProgramCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateGuid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateGuid(string hostname, string guid, string identifiant, string version) {
            this.Invoke("CreateGuid", new object[] {
                        hostname,
                        guid,
                        identifiant,
                        version});
        }
        
        /// <remarks/>
        public void CreateGuidAsync(string hostname, string guid, string identifiant, string version) {
            this.CreateGuidAsync(hostname, guid, identifiant, version, null);
        }
        
        /// <remarks/>
        public void CreateGuidAsync(string hostname, string guid, string identifiant, string version, object userState) {
            if ((this.CreateGuidOperationCompleted == null)) {
                this.CreateGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateGuidOperationCompleted);
            }
            this.InvokeAsync("CreateGuid", new object[] {
                        hostname,
                        guid,
                        identifiant,
                        version}, this.CreateGuidOperationCompleted, userState);
        }
        
        private void OnCreateGuidOperationCompleted(object arg) {
            if ((this.CreateGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateGuidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TraceLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TraceLog(string guid, System.DateTime dateTraitement, string codeappli, int codeerreur, string description) {
            this.Invoke("TraceLog", new object[] {
                        guid,
                        dateTraitement,
                        codeappli,
                        codeerreur,
                        description});
        }
        
        /// <remarks/>
        public void TraceLogAsync(string guid, System.DateTime dateTraitement, string codeappli, int codeerreur, string description) {
            this.TraceLogAsync(guid, dateTraitement, codeappli, codeerreur, description, null);
        }
        
        /// <remarks/>
        public void TraceLogAsync(string guid, System.DateTime dateTraitement, string codeappli, int codeerreur, string description, object userState) {
            if ((this.TraceLogOperationCompleted == null)) {
                this.TraceLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTraceLogOperationCompleted);
            }
            this.InvokeAsync("TraceLog", new object[] {
                        guid,
                        dateTraitement,
                        codeappli,
                        codeerreur,
                        description}, this.TraceLogOperationCompleted, userState);
        }
        
        private void OnTraceLogOperationCompleted(object arg) {
            if ((this.TraceLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TraceLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlanning", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPlanning(string guid) {
            object[] results = this.Invoke("GetPlanning", new object[] {
                        guid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlanningAsync(string guid) {
            this.GetPlanningAsync(guid, null);
        }
        
        /// <remarks/>
        public void GetPlanningAsync(string guid, object userState) {
            if ((this.GetPlanningOperationCompleted == null)) {
                this.GetPlanningOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlanningOperationCompleted);
            }
            this.InvokeAsync("GetPlanning", new object[] {
                        guid}, this.GetPlanningOperationCompleted, userState);
        }
        
        private void OnGetPlanningOperationCompleted(object arg) {
            if ((this.GetPlanningCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlanningCompleted(this, new GetPlanningCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetArret", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetArret(string guid) {
            object[] results = this.Invoke("GetArret", new object[] {
                        guid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetArretAsync(string guid) {
            this.GetArretAsync(guid, null);
        }
        
        /// <remarks/>
        public void GetArretAsync(string guid, object userState) {
            if ((this.GetArretOperationCompleted == null)) {
                this.GetArretOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArretOperationCompleted);
            }
            this.InvokeAsync("GetArret", new object[] {
                        guid}, this.GetArretOperationCompleted, userState);
        }
        
        private void OnGetArretOperationCompleted(object arg) {
            if ((this.GetArretCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArretCompleted(this, new GetArretCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlageHoraire", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPlageHoraire(string guid, System.DateTime dateheure) {
            object[] results = this.Invoke("GetPlageHoraire", new object[] {
                        guid,
                        dateheure});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlageHoraireAsync(string guid, System.DateTime dateheure) {
            this.GetPlageHoraireAsync(guid, dateheure, null);
        }
        
        /// <remarks/>
        public void GetPlageHoraireAsync(string guid, System.DateTime dateheure, object userState) {
            if ((this.GetPlageHoraireOperationCompleted == null)) {
                this.GetPlageHoraireOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlageHoraireOperationCompleted);
            }
            this.InvokeAsync("GetPlageHoraire", new object[] {
                        guid,
                        dateheure}, this.GetPlageHoraireOperationCompleted, userState);
        }
        
        private void OnGetPlageHoraireOperationCompleted(object arg) {
            if ((this.GetPlageHoraireCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlageHoraireCompleted(this, new GetPlageHoraireCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDownloadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDownloadFile(string guid, System.DateTime date) {
            object[] results = this.Invoke("GetDownloadFile", new object[] {
                        guid,
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDownloadFileAsync(string guid, System.DateTime date) {
            this.GetDownloadFileAsync(guid, date, null);
        }
        
        /// <remarks/>
        public void GetDownloadFileAsync(string guid, System.DateTime date, object userState) {
            if ((this.GetDownloadFileOperationCompleted == null)) {
                this.GetDownloadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDownloadFileOperationCompleted);
            }
            this.InvokeAsync("GetDownloadFile", new object[] {
                        guid,
                        date}, this.GetDownloadFileOperationCompleted, userState);
        }
        
        private void OnGetDownloadFileOperationCompleted(object arg) {
            if ((this.GetDownloadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDownloadFileCompleted(this, new GetDownloadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDownloadFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDownloadFile(string guid, System.DateTime date, string dest, string source) {
            this.Invoke("SetDownloadFile", new object[] {
                        guid,
                        date,
                        dest,
                        source});
        }
        
        /// <remarks/>
        public void SetDownloadFileAsync(string guid, System.DateTime date, string dest, string source) {
            this.SetDownloadFileAsync(guid, date, dest, source, null);
        }
        
        /// <remarks/>
        public void SetDownloadFileAsync(string guid, System.DateTime date, string dest, string source, object userState) {
            if ((this.SetDownloadFileOperationCompleted == null)) {
                this.SetDownloadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDownloadFileOperationCompleted);
            }
            this.InvokeAsync("SetDownloadFile", new object[] {
                        guid,
                        date,
                        dest,
                        source}, this.SetDownloadFileOperationCompleted, userState);
        }
        
        private void OnSetDownloadFileOperationCompleted(object arg) {
            if ((this.SetDownloadFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDownloadFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExecProgram", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetExecProgram(string guid, System.DateTime date) {
            object[] results = this.Invoke("GetExecProgram", new object[] {
                        guid,
                        date});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetExecProgramAsync(string guid, System.DateTime date) {
            this.GetExecProgramAsync(guid, date, null);
        }
        
        /// <remarks/>
        public void GetExecProgramAsync(string guid, System.DateTime date, object userState) {
            if ((this.GetExecProgramOperationCompleted == null)) {
                this.GetExecProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExecProgramOperationCompleted);
            }
            this.InvokeAsync("GetExecProgram", new object[] {
                        guid,
                        date}, this.GetExecProgramOperationCompleted, userState);
        }
        
        private void OnGetExecProgramOperationCompleted(object arg) {
            if ((this.GetExecProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExecProgramCompleted(this, new GetExecProgramCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetExecProgram", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetExecProgram(int idexec, System.DateTime date) {
            this.Invoke("SetExecProgram", new object[] {
                        idexec,
                        date});
        }
        
        /// <remarks/>
        public void SetExecProgramAsync(int idexec, System.DateTime date) {
            this.SetExecProgramAsync(idexec, date, null);
        }
        
        /// <remarks/>
        public void SetExecProgramAsync(int idexec, System.DateTime date, object userState) {
            if ((this.SetExecProgramOperationCompleted == null)) {
                this.SetExecProgramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetExecProgramOperationCompleted);
            }
            this.InvokeAsync("SetExecProgram", new object[] {
                        idexec,
                        date}, this.SetExecProgramOperationCompleted, userState);
        }
        
        private void OnSetExecProgramOperationCompleted(object arg) {
            if ((this.SetExecProgramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetExecProgramCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateGuidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TraceLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPlanningCompletedEventHandler(object sender, GetPlanningCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlanningCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlanningCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetArretCompletedEventHandler(object sender, GetArretCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArretCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArretCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPlageHoraireCompletedEventHandler(object sender, GetPlageHoraireCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlageHoraireCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlageHoraireCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDownloadFileCompletedEventHandler(object sender, GetDownloadFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDownloadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDownloadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetDownloadFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetExecProgramCompletedEventHandler(object sender, GetExecProgramCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExecProgramCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExecProgramCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetExecProgramCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591